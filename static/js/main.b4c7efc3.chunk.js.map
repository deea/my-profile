{"version":3,"sources":["logo.svg","meSquare.jpg","AndreeaCapalnasResume1.pdf","plantis_images/aPlantis.png","plantis_images/bPlantis.png","plantis_images/cPlantis.jpg","plantis_images/dPlantis.png","plantis_images/ePlantis.png","plantis_images/fPlantis.png","plantis_images/gPlantis.png","plantis_images/hPlantis.png","components/Details.jsx","components/ProjectDetails.jsx","components/Avatar.jsx","components/Header.jsx","components/Summary.jsx","components/SocialMedia.jsx","components/Footer.jsx","components/Skills.jsx","components/ButtonLink.jsx","components/Main.jsx","components/Page.jsx","components/Home.jsx","components/plantis_components/PHeader.jsx","components/plantis_components/PVideo.jsx","components/plantis_components/PCarousel.jsx","components/plantis_components/PScreenshots.jsx","components/PlantisPage.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","DetailsStyle","styled","div","ProjectsCoding","Details","header","children","ProjectName","span","ProjectText","a","ProjectDetails","url","name","text","href","target","rel","AvatarText","Wrapper","AvatarImg","img","Avatar","Pdf","src","meSquare","alt","AppHeader","HeaderPersonal","Header","position","ShortBio","Summary","CreatedWithReact","IconSocial","SocialMedia","icon","SocialIcons","CreatedWithReactPTag","p","IconMargin","FaHeartbeat","Footer","logo","className","skills","SkillsSection","Skill","Skills","map","skill","key","ButtonWrapper","Buttons","button","ButtonLink","to","type","defaultProps","projects","AppMain","WorkSkills","ButtonLinkPosition","Main","project","darker","imageUrl","Content","Page","Home","HeaderWrapper","Flex","PHeader","style","fontWeight","opts","height","width","playerVars","autoplay","VideoWrapper","GreenBorder","YouTube","PVideo","textAlign","color","videoId","CarouselShadow","HomepageImg","CarouselWrapper","PCarousel","dots","infinite","speed","autoplaySpeed","slidesToShow","slidesToScroll","aPlantis","bPlantis","Section","ScreenShotsWrapper","ScreensAndText","h3","YourJungleImgs","marginLeft","marginRight","TextInLine","PScreenshots","cPlantis","paddingBottom","dPlantis","ePlantis","fPlantis","gPlantis","hPlantis","PageWrapper","Back","PlantisPage","fontSize","App","basename","process","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4c7efc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/meSquare.bddd34e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AndreeaCapalnasResume1.659435a2.pdf\";","module.exports = __webpack_public_path__ + \"static/media/aPlantis.89a54de7.png\";","module.exports = __webpack_public_path__ + \"static/media/bPlantis.185ead58.png\";","module.exports = __webpack_public_path__ + \"static/media/cPlantis.363ef38f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dPlantis.a4e68eb1.png\";","module.exports = __webpack_public_path__ + \"static/media/ePlantis.50744153.png\";","module.exports = __webpack_public_path__ + \"static/media/fPlantis.bab93611.png\";","module.exports = __webpack_public_path__ + \"static/media/gPlantis.62f41720.png\";","module.exports = __webpack_public_path__ + \"static/media/hPlantis.2f656e1e.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst DetailsStyle = styled.div`\n    font-size: 24px;\n    width: 30%;\n    margin-top: 20px;\n\n    && h2 {\n      margin-bottom: 10px;\n    }\n    \n    /* border-right: 2px solid #09d3ac; */\n`;\n\nconst ProjectsCoding = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  margin: 10px 0px 0px 0px;\n`;\n\nconst Details = ({ header, children }) => (\n  <DetailsStyle>\n    <h2>{header}</h2>\n    <ProjectsCoding>\n      {children}\n    </ProjectsCoding>\n  </DetailsStyle>\n);\n\nDetails.propTypes = {\n  header: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ProjectName = styled.span`\n  color:  #09d3ac;\n`;\n\nconst ProjectText = styled.a`\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ProjectDetails = ({ url, name, text }) => (\n  <p>\n    <span>\n      <ProjectText href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <ProjectName><strong>{`${name}: `}</strong></ProjectName>\n        {text}\n      </ProjectText>\n    </span>\n  </p>\n);\n\nProjectDetails.propTypes = {\n  url: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default ProjectDetails;\n","import React from 'react';\nimport styled from 'styled-components';\nimport meSquare from '../meSquare.jpg';\nimport Pdf from '../AndreeaCapalnasResume1.pdf';\n\nconst AvatarText = styled.div`\n  position: absolute;\n  top: 100px;\n  left: 35px;\n  color: white;\n  visibility: hidden;\n  font-size: 16px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin-top: 5px;\n  \n\n  &:hover ${AvatarText} {\n    visibility: visible;\n  }\n`;\n\nconst AvatarImg = styled.img`\n  width: 130px;\n  height: 130px;\n  border-radius: 30%;\n  border: 2px solid #09d3ac;\n\n  :hover {\n    opacity: 0.3;\n  }\n`;\n\nconst Avatar = () => (\n  <a href={Pdf} target=\"_blank\" rel=\"noopener noreferrer\">\n    <Wrapper>\n      <AvatarImg\n        src={meSquare}\n        alt=\"avatar\"\n      />\n      <AvatarText>\n        View CV\n      </AvatarText>\n    </Wrapper>\n  </a>\n);\n\nexport default Avatar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Avatar from './Avatar';\n\nconst AppHeader = styled.header`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  justify-content: space-between;\n  font-size: 24px;\n  color: white;\n`;\n\nconst HeaderPersonal = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nconst Header = ({ name, position }) => (\n  <AppHeader>\n    <HeaderPersonal>\n      <h1>{name}</h1>\n      <h2>{position}</h2>\n    </HeaderPersonal>\n    <Avatar />\n  </AppHeader>\n);\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ShortBio = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  color: white;\n  font-style: italic;\n`;\n\nconst Summary = ({ text }) => (\n  <ShortBio>\n    <p>{text}</p>\n  </ShortBio>\n);\n\nSummary.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Summary;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CreatedWithReact = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  margin: 8px;\n`;\n\nconst IconSocial = styled.div`\n  margin: 16px 8px 0px 8px;\n  color: #09d3ac;\n`;\n\nconst SocialMedia = ({ icon, url }) => (\n  <CreatedWithReact>\n    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n      <IconSocial>{icon}</IconSocial>\n    </a>\n  </CreatedWithReact>\n);\n\nSocialMedia.propTypes = {\n  icon: PropTypes.node.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default SocialMedia;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaLinkedin, FaGithub, FaHeartbeat } from 'react-icons/fa';\nimport SocialMedia from './SocialMedia';\nimport logo from '../logo.svg';\n\n\nconst linkedIn = 'https://www.linkedin.com/in/andreea-capalnas/';\nconst gitHub = 'https://github.com/deea';\n\nconst SocialIcons = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 2em;\n  border-top: 2px solid #09d3ac;\n  margin-top: 20px;\n`;\n\nconst CreatedWithReact = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CreatedWithReactPTag = styled.p`\nfont-size: 14px;\n`;\n\nconst IconMargin = styled(FaHeartbeat)`\n  margin: 0 4px;\n`;\n\nconst Footer = () => (\n  <div>\n    <SocialIcons>\n      <SocialMedia\n        url={linkedIn}\n        icon={<FaLinkedin />}\n      />\n      <SocialMedia\n        url={gitHub}\n        icon={<FaGithub />}\n      />\n    </SocialIcons>\n    <CreatedWithReact>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <CreatedWithReactPTag>\n        App created with\n        <IconMargin />\n        through learning with React\n      </CreatedWithReactPTag>\n    </CreatedWithReact>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst skills = ['Ruby', 'Rails', 'JavaScript ES6', 'HTML5', 'CSS/SCSS', 'Heroku', 'PostgreSQL', 'GitHub', 'git', 'DNS', 'Teamwork', 'Collaboration', 'Work Ethic', 'Enthusiasm', 'Project Management'];\n\nconst SkillsSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: top;\n`;\n\nconst Skill = styled.div`\n  width: 50%;\n  overflow: hidden;\n`;\n\nconst Skills = () => (\n  <SkillsSection>\n    {skills.map((skill) => (\n      <Skill key={skill}>\n        {skill}\n      </Skill>\n    ))}\n  </SkillsSection>\n);\n\nexport default Skills;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst ButtonWrapper = styled.div`\n  justify-content: center;\n  margin-top: 15px;\n`;\n\nconst Buttons = styled.button`\n  margin: 5px;\n  border: 2px solid #09d3ac;\n  background: none;\n  color: white;\n  font-size: 18px;\n  font-weight: bold;\n  width: 200px;\n  height: 35px;\n  border-radius: 3px;\n  justify-content: center;\n  margin-top: 15px;\n  cursor:pointer;\n`;\n\nconst ButtonLink = ({ url, text, target }) => (\n  <ButtonWrapper>\n    <Link to={url} target={target}>\n      <Buttons type=\"button\">\n        {text}\n      </Buttons>\n    </Link>\n  </ButtonWrapper>\n);\n\nButtonLink.defaultProps = {\n  target: '',\n};\n\nButtonLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  target: PropTypes.string,\n};\n\n\nexport default ButtonLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Summary, Details, ProjectDetails, Skills,\n} from './index';\nimport ButtonLink from './ButtonLink';\n\nconst projects = [\n  {\n    url: 'http://www.plantis.co',\n    name: 'Plantis',\n    text: 'A web application created as a collaborative project and designed to help people easily look after their house plants by reminding them when each one requires watering. In addition, it comprises of a motivational reward system along with a social feature where you can see and follow other people and their plants.',\n  },\n  {\n    url: 'https://plantza-alan1010010.herokuapp.com',\n    name: 'Plantza',\n    text: 'In a team of four, within a week we launched an AirBnB like web app for renting/letting house plants.',\n  },\n];\n\nconst AppMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n`;\n\nconst WorkSkills = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst ButtonLinkPosition = styled.span`\n  text-align: center;\n`;\n\nconst Main = () => (\n  <AppMain>\n    <Summary\n      text=\"Within the past three years working as Account Manager in a number of tech companies, I have developed a strong interest in being directly involved in the technical side of the product. I decided to take the next step and completed an intensive bootcamp to become a Full-Stack Developer.\"\n    />\n    <Summary\n      text=\"Having enjoyed it immensely, I am now looking to work as part of a great team to continue my journey, with a keen interest in learning new technologies, programming languages and frameworks.\"\n    />\n    <WorkSkills>\n      <Details header=\"Relevant Experience\">\n        <div>\n          <p>\n            <strong>Le Wagon Full-stack Ruby on Rails Bootcamp </strong>\n            - 9 week intensive coding bootcamp learning and coding with Ruby on Rails, HTML5, CSS/SCSS, Bootstrap, JavaScript ES6, jQuery, SQL, PostgreSQL, MVC, OOP, git, GitHub and Heroku. During the course I completed several projects, listed in the Projects section.\n          </p>\n          <ButtonLinkPosition>\n            <ButtonLink url=\"/plantis\" text=\"Plantis Project\" />\n          </ButtonLinkPosition>\n        </div>\n      </Details>\n      <Details header=\"Projects\">\n        {projects.map((project) => (\n          <ProjectDetails\n            key={project.name}\n            url={project.url}\n            name={project.name}\n            text={project.text}\n          />\n        ))}\n      </Details>\n      <Details header=\"Skills\">\n        <p><Skills /></p>\n      </Details>\n    </WorkSkills>\n  </AppMain>\n);\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst linearGradient = 'linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4)),';\n\nconst Wrapper = styled.div`\n  background-image: ${({ darker }) => (darker ? linearGradient : '')} url(\"${({ imageUrl }) => imageUrl}\");\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: cover;\n  background-attachment: fixed;\n  color: white;\n  min-height: 100vh;\n  min-width: 1000px\n`;\n\nconst Content = styled.div`\n  width: 960px;\n  padding: 40px 20px;\n  margin: auto;\n`;\n\nconst Page = ({ children, imageUrl, darker }) => (\n  <Wrapper imageUrl={imageUrl} darker={darker}>\n    <Content>\n      {children}\n    </Content>\n  </Wrapper>\n);\n\nPage.defaultProps = {\n  darker: false,\n};\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  darker: PropTypes.bool,\n};\n\nexport default Page;\n","import React from 'react';\nimport { Header, Footer } from './index';\nimport Main from './Main';\nimport Page from './Page';\nimport '../App.css';\n\nconst Home = () => (\n  <Page imageUrl=\"https://images.unsplash.com/photo-1483982258113-b72862e6cff6?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\">\n    <Header\n      name=\"Andreea Capalnas\"\n      position=\"Junior Full-Stack Developer | London\"\n    />\n    <Main />\n    <Footer />\n  </Page>\n);\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled.div`\n  margin-bottom: 60px;\n\n  && h1 {\n    font-size: 55px;\n    color: #09d3ac;\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n`;\n\nconst PHeader = () => (\n  <HeaderWrapper>\n    <Flex>\n      <h1>Plantis Project</h1>\n    </Flex>\n    <h3 style={{ fontWeight: 400 }}><i>Project developed in the last two weeks of the bootcamp in a team of 4. I had pitched the idea for Plantis and together with three of my peers - Alan, Mark and Stan - we built this web application that helps people look after their home plants through watering reminders, motivational rewards that lead to level progression, leaderboard and social features.</i></h3>\n  </HeaderWrapper>\n);\n\nexport default PHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport YouTube from 'react-youtube';\n\nconst opts = {\n  height: '500',\n  width: '900',\n  playerVars: {\n    autoplay: 0,\n  },\n};\n\nconst VideoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  margin-bottom: 40px;\n  border-radius: 4px;\n  padding: 20px 0px;\n\n`;\n\nconst GreenBorder = styled(YouTube)`\n  border: solid 3px #09d3ac;\n`;\n\n\nconst PVideo = () => (\n  <>\n    <p style={{ textAlign: 'center' }}>See Plantis in action by watching this <strong style={{ color: '#09d3ac' }}>demo</strong> video from the nerve-racking presentation night</p>\n    <VideoWrapper>\n      <GreenBorder\n        videoId=\"MGvvO2Mk-SQ\"\n        opts={opts}\n      />\n    </VideoWrapper>\n  </>\n);\n\nexport default PVideo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport aPlantis from '../../plantis_images/aPlantis.png';\nimport bPlantis from '../../plantis_images/bPlantis.png';\n\nconst CarouselShadow = styled.div`\n  max-width: 100vw;\n`;\n\nconst HomepageImg = styled.img`\n  width: 900px;\n  height: 550px;\n`;\n\nconst CarouselWrapper = styled.div`\n  width: 900px;\n  height: 550px;\n  margin: auto;\n  align-items: center;\n  padding-top: 50px;\n`;\n\nconst PCarousel = () => (\n  <CarouselWrapper>\n    <CarouselShadow>\n      <Slider\n        dots\n        infinite\n        speed={600}\n        autoplay\n        autoplaySpeed={6000}\n        slidesToShow={1}\n        slidesToScroll={1}\n      >\n        <HomepageImg src={aPlantis} alt=\"Homepage\" />\n        <HomepageImg src={bPlantis} alt=\"How it works\" />\n      </Slider>\n    </CarouselShadow>\n  </CarouselWrapper>\n);\n\nexport default PCarousel;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PCarousel from './PCarousel';\nimport cPlantis from '../../plantis_images/cPlantis.jpg';\nimport dPlantis from '../../plantis_images/dPlantis.png';\nimport ePlantis from '../../plantis_images/ePlantis.png';\nimport fPlantis from '../../plantis_images/fPlantis.png';\nimport gPlantis from '../../plantis_images/gPlantis.png';\nimport hPlantis from '../../plantis_images/hPlantis.png';\n\nconst Section = styled.div`\n  margin: 100px 0;\n`;\n\nconst ScreenShotsWrapper = styled.div`\n  margin-top: 20px;\n  \n  && p {\n    margin: 0;\n  }\n`;\n\nconst ScreensAndText = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin: 40px 0;\n`;\n\nconst Header = styled.h3`\n  font-weight: bold;\n  text-align: center;\n  color: #09d3ac;\n  font-size: 35px !important;\n`;\n\nconst YourJungleImgs = styled.img`\n  max-width: 550px;\n  border-radius: 5px;\n  border: solid 3px #09d3ac;\n  ${({ marginLeft }) => (marginLeft ? 'margin-left: 20px;' : '')}\n  ${({ marginRight }) => (marginRight ? 'margin-right: 20px;' : '')}\n`;\n\nconst TextInLine = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PScreenshots = () => (\n  <ScreenShotsWrapper>\n    <Section>\n      <Header>Landing Page</Header>\n      <p style={{ textAlign: 'center' }}>The gateway to our application where users begin their journey to a thriving bundle of green</p>\n      <PCarousel />\n    </Section>\n    <Section>\n      <Header>Your Jungle page</Header>\n      <ScreensAndText>\n        <YourJungleImgs src={cPlantis} alt=\"jungle page\" marginRight />\n        <TextInLine>\n          <p style={{ paddingBottom: '50px' }}>Users can view their plant collection and see which of their plants needs watering.</p>\n          <p>Watering plants on time not only makes for happy plants but also gives users motivational rewards in the form of seeds (level progression).</p>\n        </TextInLine>\n      </ScreensAndText>\n      <ScreensAndText>\n        <TextInLine>\n          <p style={{ paddingBottom: '50px' }}>Data is stored for each plant type to know how often a plant needs watering.</p>\n          <p>Information is given to users on other care factors such as: how much light is needed, what type of soil is required and more, to help keep them all thriving.</p>\n        </TextInLine>\n        <YourJungleImgs src={dPlantis} alt=\"plant info\" marginLeft />\n      </ScreensAndText>\n    </Section>\n    <Section>\n      <Header>New plant to add?</Header>\n      <ScreensAndText>\n        <YourJungleImgs src={ePlantis} alt=\"add plant\" marginRight />\n        <p>Plants can be added to a user's jungle by selecting from one of the plant types. Each plant can be nicknamed and a photo uploaded. Once the last watering is confirmed, notifications are activated.</p>\n      </ScreensAndText>\n    </Section>\n    <Section>\n      <Header>Gamification</Header>\n      <ScreensAndText>\n        <p>Seeds are earned for each watering and contribute towards level progression. Each level comes with a new badge and title.</p>\n        <YourJungleImgs src={fPlantis} alt=\"your profile page\" marginLeft />\n      </ScreensAndText>\n      <ScreensAndText>\n        <YourJungleImgs src={gPlantis} alt=\"social aspect on your profile page\" marginRight />\n        <p>The leaderboard compares users progression and gets people more involved in taking care of their plants.</p>\n      </ScreensAndText>\n    </Section>\n    <Section>\n      <Header>Social</Header>\n      <ScreensAndText>\n        <p>Users can follow their friends, get inspiration from others by browsing their jungles and growing the same kind of plants their friends have.</p>\n        <YourJungleImgs src={hPlantis} alt=\"other people's plants\" marginLeft />\n      </ScreensAndText>\n    </Section>\n    <p>Please note Plantis web application has been developed with the intention to learn and apply the knowledge gained during the bootcamp in a collaborative and real-life like setting. It is not a complete product at this stage (hopefully it will be at some point!).</p>\n  </ScreenShotsWrapper>\n);\n\nexport default PScreenshots;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaChevronLeft } from 'react-icons/fa';\nimport PHeader from './plantis_components/PHeader';\nimport PVideo from './plantis_components/PVideo';\nimport PScreenshots from './plantis_components/PScreenshots';\nimport Page from './Page';\n\nconst PageWrapper = styled.div`\n  && h3 {\n    font-size: 25px;\n  }\n\n  && p {\n    font-size: 20px;\n  }\n`;\n\nconst Back = styled.div`\n  font-size: 16zpx;\n  display: flex;\n  align-items: center;\n`;\n\nconst PlantisPage = () => (\n  <Page imageUrl=\"https://images.pexels.com/photos/1227648/pexels-photo-1227648.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" darker>\n    <Link to=\"/\">\n      <Back>\n        <FaChevronLeft /><span style={{ marginLeft: '8px', fontSize: '24px' }}>Home</span>\n      </Back>\n    </Link>\n    <PageWrapper>\n      <PHeader />\n      <PVideo />\n      <PScreenshots />\n    </PageWrapper>\n  </Page>\n);\n\nexport default PlantisPage;\n","import React from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport PlantisPage from './components/PlantisPage';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/plantis\" component={PlantisPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}